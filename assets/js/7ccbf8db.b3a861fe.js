"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2579],{603905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return p}});var n=o(667294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(o),p=r,h=c["".concat(s,".").concat(p)]||c[p]||m[p]||a;return o?n.createElement(h,l(l({ref:t},u),{},{components:o})):n.createElement(h,l({ref:t},u))}));function p(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<a;d++)l[d]=o[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},358215:function(e,t,o){var n=o(667294);t.Z=function(e){var t=e.children,o=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:o,className:r},t)}},409877:function(e,t,o){o.d(t,{Z:function(){return u}});var n=o(487462),r=o(667294),a=o(972389),l=o(429548),i=o(386010),s="tabItem_LplD";function d(e){var t,o,a,d=e.lazy,u=e.block,m=e.defaultValue,c=e.values,p=e.groupId,h=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=c?c:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,l.lx)(f,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(o=g.find((function(e){return e.props.default})))?void 0:o.props.value)?t:null==(a=g[0])?void 0:a.props.value;if(null!==v&&!f.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.UB)(),w=y.tabGroupChoices,b=y.setTabGroupChoices,x=(0,r.useState)(v),T=x[0],E=x[1],N=[],C=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var I=w[p];null!=I&&I!==T&&f.some((function(e){return e.value===I}))&&E(I)}var _=function(e){var t=e.currentTarget,o=N.indexOf(t),n=f[o].value;n!==T&&(C(t),E(n),null!=p&&b(p,n))},O=function(e){var t,o=null;switch(e.key){case"ArrowRight":var n=N.indexOf(e.currentTarget)+1;o=N[n]||N[0];break;case"ArrowLeft":var r=N.indexOf(e.currentTarget)-1;o=N[r]||N[N.length-1]}null==(t=o)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},h)},f.map((function(e){var t=e.value,o=e.label,a=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return N.push(e)},onKeyDown:O,onFocus:_,onClick:_},a,{className:(0,i.Z)("tabs__item",s,null==a?void 0:a.className,{"tabs__item--active":T===t})}),null!=o?o:t)}))),d?(0,r.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,a.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},763781:function(e,t,o){o.d(t,{n:function(){return u}});var n=o(487462),r=o(263366),a=o(875068),l=o(667294),i=o(644996),s=["src"],d=function(e){return l.createElement(l.Fragment,null,l.createElement("source",{src:(0,i.Z)(e.src),type:"video/mp4"}))},u=function(e){function t(t){var o;return(o=e.call(this,t)||this).video=l.createRef(),o}(0,a.Z)(t,e);var o=t.prototype;return o.componentDidMount=function(){this.video.current.play()},o.onEnded=function(e){var t=this.video;this.props.timeout?setTimeout((function(){t.current.play()}),this.props.timeout):t.current.play()},o.render=function(){var e=this.props,t=e.src,o=(0,r.Z)(e,s);return l.createElement("video",(0,n.Z)({ref:this.video,width:"100%",onEnded:this.onEnded.bind(this),muted:!0},o),l.createElement(d,{src:t}),"Your browser does not support the video tag.")},t}(l.Component)},649998:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return u},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return p},default:function(){return w}});var n=o(487462),r=o(263366),a=(o(667294),o(603905)),l=o(409877),i=o(358215),s=o(763781),d=(o(644996),["components"]),u={title:"(PRO) Enter the Gungeon"},m=void 0,c={unversionedId:"examples/enter-the-gungeon",id:"version-2.0.10/examples/enter-the-gungeon",title:"(PRO) Enter the Gungeon",description:"In this tutorial, we will look into how to generate levels similar to what we can see in Enter the Gungeon. We will use this tileset by @pixelpoem - be sure to check out their work if you like the tileset.",source:"@site/versioned_docs/version-2.0.10/examples/enter-the-gungeon.md",sourceDirName:"examples",slug:"/examples/enter-the-gungeon",permalink:"/Edgar-Unity/docs/examples/enter-the-gungeon",editUrl:"https://github.com/OndrejNepozitek/Edgar-Unity/tree/docusaurus/versioned_docs/version-2.0.10/examples/enter-the-gungeon.md",tags:[],version:"2.0.10",frontMatter:{title:"(PRO) Enter the Gungeon"},sidebar:"docs",previous:{title:"(PRO) Isometric 1",permalink:"/Edgar-Unity/docs/examples/isometric-1"},next:{title:"(PRO) Dead Cells",permalink:"/Edgar-Unity/docs/examples/dead-cells"}},p=[{value:"Room templates",id:"room-templates",children:[],level:2},{value:"Level graphs",id:"level-graphs",children:[{value:"Custom rooms and connections",id:"custom-rooms-and-connections",children:[{value:"Rooms",id:"rooms",children:[],level:4},{value:"Connections",id:"connections",children:[],level:4}],level:3},{value:"Input setup task",id:"input-setup-task",children:[],level:3},{value:"Pick random level graph",id:"pick-random-level-graph",children:[],level:3},{value:"Random secret rooms",id:"random-secret-rooms",children:[],level:3}],level:2},{value:"Room manager",id:"room-manager",children:[{value:"Current room detection",id:"current-room-detection",children:[],level:3},{value:"Enemies",id:"enemies",children:[],level:3},{value:"Doors",id:"doors",children:[],level:3},{value:"Locked doors",id:"locked-doors",children:[],level:3}],level:2},{value:"Fog of War",id:"fog-of-war",children:[],level:2},{value:"Results",id:"results",children:[],level:2}],h=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},g=h("Gallery"),f=h("Image"),k=h("Path"),v=h("ExternalCode"),y={toc:p};function w(e){var t=e.components,o=(0,r.Z)(e,d);return(0,a.kt)("wrapper",(0,n.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this tutorial, we will look into how to generate levels similar to what we can see in ",(0,a.kt)("a",{parentName:"p",href:"https://store.steampowered.com/app/311690/Enter_the_Gungeon/"},"Enter the Gungeon"),". We will use ",(0,a.kt)("a",{parentName:"p",href:"https://pixel-poem.itch.io/dungeon-assetpuck"},"this tileset")," by ",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/pixel_poem"},"@pixel_poem")," - be sure to check out their work if you like the tileset."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Disclaimer:")," We are in no way affiliated with the authors of the ",(0,a.kt)("strong",{parentName:"p"},"Enter the Gungeon")," game and this plugin is not used in the game. This is only a case study about how to use this plugin to create something similar to what is done in that game.")),(0,a.kt)(g,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,a.kt)(f,{src:"2d/examples/gungeon/result1.png",caption:"Example result",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/result2.png",caption:"Example result",mdxType:"Image"})),(0,a.kt)(s.n,{src:"videos/gungeon_example_video.mp4",style:{marginBottom:15,marginTop:-15},mdxType:"Video"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," All files from this example can be found at ",(0,a.kt)(k,{path:"2de:Gungeon",mdxType:"Path"}),".")),(0,a.kt)("h2",{id:"room-templates"},"Room templates"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," If you want to add some more room templates, be sure to use the ",(0,a.kt)("em",{parentName:"p"},"Create")," menu (",(0,a.kt)("em",{parentName:"p"},"Examples/Gungeon/Room template"),") or duplicate one of the existing room templates.")),(0,a.kt)(g,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/entrance.png",caption:"Entrance",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/hub1.png",caption:"Hub",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/normal5.png",caption:"Normal",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/reward.png",caption:"Reward",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/shop.png",caption:"Shop",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/secret.png",caption:"Secret",mdxType:"Image"})),(0,a.kt)("h2",{id:"level-graphs"},"Level graphs"),(0,a.kt)("p",null,"In Enter the Gungeon, they use multiple level graphs for each stage of the game."),(0,a.kt)(g,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,a.kt)(f,{src:"2d/examples/gungeon/level_graph_2.png",caption:"Stage 1 level graph",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/level_graph_1.png",caption:"Stage 2 level graph",mdxType:"Image"})),(0,a.kt)("h3",{id:"custom-rooms-and-connections"},"Custom rooms and connections"),(0,a.kt)("p",null,"In the level graph above, we used custom room and connection types. We use this feature to add additional data to rooms and connections and also to change how they are displayed in the editor."),(0,a.kt)("h4",{id:"rooms"},"Rooms"),(0,a.kt)("p",null,"Each room in Enter the Gungeon has its type - there are rooms with enemies, treasure rooms, shops, etc. We use a custom room implementation to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"GungGungeonRoomType Type")," field to each room. Moreover, we use different colors to distinguish different types of rooms in the level graph editor."),(0,a.kt)("h4",{id:"connections"},"Connections"),(0,a.kt)("p",null,"Some corridors in Enter the Gungeon are locked and can be unlocked only from the other side of the door. This is usually used to force the player to go through a loop that ends with a treasure or shop room and the door then serves as a shortcut to get back to the main path. We use a custom connection implementation to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"bool IsLocked")," field. If the door is locked, we use red color to draw the line between the two rooms."),(0,a.kt)(l.Z,{defaultValue:"room",values:[{label:"GungeonRoom.cs",value:"room"},{label:"GungeonConnection.cs",value:"connection"}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"room",mdxType:"TabItem"},(0,a.kt)(v,{name:"2d_gungeon_room",mdxType:"ExternalCode"})),(0,a.kt)(i.Z,{value:"connection",mdxType:"TabItem"},(0,a.kt)(v,{name:"2d_gungeon_connection",mdxType:"ExternalCode"}))),(0,a.kt)("h3",{id:"input-setup-task"},"Input setup task"),(0,a.kt)("p",null,"We will use a ",(0,a.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/generators/custom-input"},"custom input setup task")," because it gives us more control when working with the input. We will use it to choose a random level graph and add a random secret room. The base of the task is the same as in the ",(0,a.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/examples/dead-cells#input-setup"},"Dead Cells")," example."),(0,a.kt)("h3",{id:"pick-random-level-graph"},"Pick random level graph"),(0,a.kt)("p",null,"Because we have multiple level graphs for each stage of the game, we want to choose the level graph randomly from the available options. The implementation is straightforward:"),(0,a.kt)(v,{name:"2d_gungeon_inputSetup_1",mdxType:"ExternalCode"}),(0,a.kt)("p",null,"Then we just assign level graphs to the two arrays. The last step is to control the current stage of the game. We can do that in the game manager before we generate a level:"),(0,a.kt)(v,{name:"2d_gungeon_generatorStage",mdxType:"ExternalCode"}),(0,a.kt)("h3",{id:"random-secret-rooms"},"Random secret rooms"),(0,a.kt)("p",null,"Even though all the levels are primarily guided by hand-made level graphs, there is a bit of randomness included. When we set up the input for the algorithm, we roll a die to determine if we want to add a secret room to the level. We can add a ",(0,a.kt)("inlineCode",{parentName:"p"},"float SecretRoomChance")," field to the input setup and configure this value directly in the generator inspector. In Enter the Gungeon, they also choose whether to connect the room to a dead-end room or to any rooms - this is controlled with ",(0,a.kt)("inlineCode",{parentName:"p"},"SecretRoomDeadEndChance"),"."),(0,a.kt)("p",null,"To add the secret room to the level, we first get all the rooms from the level description and randomly choose one of them to attach the secret room to. Then we have to do 3 things. First, we create an instance of the secret room - this corresponds to a room node in the level graph. Second, we create an instance of the connection between the two rooms - this corresponds to an edge in the level graph. And third, because we use corridors, we also need to create an instance of the corridor room that is between the two rooms."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," Our secret rooms are not really secret as we do not hide them in any way. I may revisit this in the future to make them really secret.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Show code block"),(0,a.kt)("div",null,(0,a.kt)(v,{name:"2d_gungeon_inputSecretRooms",mdxType:"ExternalCode"}))),(0,a.kt)("h2",{id:"room-manager"},"Room manager"),(0,a.kt)("p",null,"In Enter the Gungeon, when a player visits a (combat-oriented) room for the first time, two things happen. First, all the doors to neighboring rooms get closed and locked. And second, enemies are spawned. Only after all the enemies are defeated, the doors unlock."),(0,a.kt)(s.n,{src:"videos/gungeon_enter_room.mp4",mdxType:"Video"}),(0,a.kt)("br",null),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," The enemies in this example are very dumb - they just stand there and can be killed if the player collides with them. The game manager keeps track of how many enemies are left in the room and if there are non, it opens the doors.")),(0,a.kt)("h3",{id:"current-room-detection"},"Current room detection"),(0,a.kt)("p",null,"The base of this setup is detecting when a player enters a room. We will use the same setup as we described in the ",(0,a.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/guides/current-room-detection"},"Current room detection")," tutorial. That means that we have a floor collider that is set to trigger, and it informs ",(0,a.kt)("inlineCode",{parentName:"p"},"RoomManager")," when the player enters a room."),(0,a.kt)("h3",{id:"enemies"},"Enemies"),(0,a.kt)("p",null,"We will use a very simple approach to a randomized spawn of enemies. We will use the floor collider that we set up in the previous step to get a random position inside the room."),(0,a.kt)("p",null,"The algorithm works as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Get a random position inside floor collider bounds"),(0,a.kt)("li",{parentName:"ol"},"Check if the position is actually inside the collider (there may be holes)"),(0,a.kt)("li",{parentName:"ol"},"Check that there are no other colliders near the position"),(0,a.kt)("li",{parentName:"ol"},"Pick a random enemy and instantiate it at the position")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Show code block"),(0,a.kt)("div",null,(0,a.kt)(v,{name:"2d_gungeon_roomManager",mdxType:"ExternalCode"}))),(0,a.kt)("br",null),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," As the process of choosing enemy spawn points is random, we hope that the success rate is quite high, and we do not have to spend too much time on it. However, if we wanted to spawn too many enemies or there were too many holes in the collider, we could have problems with performance. In that case, it would be better to use a different approach.")),(0,a.kt)("h3",{id:"doors"},"Doors"),(0,a.kt)("p",null,"Our goal is to close neighbouring corridors with doors when the player enters the room and then open the doors when all the enemies are dead. The only slightly complex part is how to obtain the game objects that represent the doors. To make our lives easier, we added the doors directly to each corridor room template. That means that after the level is generated we just have to retrieve the doors from corridor room templates."),(0,a.kt)(g,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/ver5.png",caption:"Vertical corridor",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/room_templates/hor5.png",caption:"Horizontal corridor",mdxType:"Image"})),(0,a.kt)("p",null,"We can do it like this:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Prepare a custom post-processing task"),(0,a.kt)("li",{parentName:"ol"},"Go through all non-corridor rooms"),(0,a.kt)("li",{parentName:"ol"},"Find all the corridors that are connected to the room"),(0,a.kt)("li",{parentName:"ol"},"Get the door game object from each neighbouring corridor"),(0,a.kt)("li",{parentName:"ol"},"Store all the doors in the room manager")),(0,a.kt)("p",null,"When we have the game objects, we can simply activate them when the player enters the room and then deactivate them when enemies are dead."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," Check the game manager implementation if you want to see how and when are the doors opened.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Show code block"),(0,a.kt)("div",null,(0,a.kt)(v,{name:"2d_gungeon_doors",mdxType:"ExternalCode"}))),(0,a.kt)("h3",{id:"locked-doors"},"Locked doors"),(0,a.kt)("p",null,"The last thing that we have to handle are doors that should be locked even if there are no enemies. These doors are used to separate reward/shop rooms from other rooms and force the player to find a different path to the reward room. When the player discovers the reward room, all the neighbouring locked doors are unlocked."),(0,a.kt)("h2",{id:"fog-of-war"},"Fog of War"),(0,a.kt)("p",null,"In this example, the ",(0,a.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/guides/fog-of-war"},"Fog of War")," feature is enabled. For more information on how to set up the feature, please see the ",(0,a.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/guides/fog-of-war"},"documentation"),". In order to integrate the Fog of War into this example scene, I modified the current room detection script (",(0,a.kt)("inlineCode",{parentName:"p"},"GungeonCurrentRoomHandler")," class) to trigger the fog when a player enters a corridor room, and I also modified the ",(0,a.kt)("inlineCode",{parentName:"p"},"GungeonPostProcessTask")," class to set up the fog after a level is generated."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," The integration of the Fog of War effect into this example could be improved. I think that it looks better when the next room is revealed only after the player walks through the middle of a corridor and not right when he enters the corridor. Also, the integration with doors is not ideal - you can reveal rooms behind locked rooms if you go close to the door. I want to improve this in the future.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:")," To disable the Fog of War effect, go to the main camera and disable the Fog of War component.")),(0,a.kt)("h2",{id:"results"},"Results"),(0,a.kt)(g,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,a.kt)(f,{src:"2d/examples/gungeon/result3.png",caption:"Example result",mdxType:"Image"}),(0,a.kt)(f,{src:"2d/examples/gungeon/result4.png",caption:"Example result",mdxType:"Image"})))}w.isMDXComponent=!0}}]);