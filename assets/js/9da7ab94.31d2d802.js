"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6637],{603905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return u}});var o=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},m=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(r),u=a,h=c["".concat(s,".").concat(u)]||c[u]||d[u]||l;return r?o.createElement(h,n(n({ref:t},m),{},{components:r})):o.createElement(h,n({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,n=new Array(l);n[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,n[1]=i;for(var p=2;p<l;p++)n[p]=r[p];return o.createElement.apply(null,n)}return o.createElement.apply(null,r)}c.displayName="MDXCreateElement"},972384:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return k}});var o=r(487462),a=r(263366),l=(r(667294),r(603905)),n=["components"],i={title:"Example 2"},s=void 0,p={unversionedId:"examples/example-2",id:"version-2.0.0/examples/example-2",title:"Example 2",description:"In this tutorial, we will use this tileset by 0x72. Be sure to check out their work if you like the tileset. We will not care about room decorations - we will use just basic walls, floor and door tiles.",source:"@site/versioned_docs/version-2.0.0/examples/example-2.md",sourceDirName:"examples",slug:"/examples/example-2",permalink:"/Edgar-Unity/docs/2.0.0/examples/example-2",editUrl:"https://github.com/OndrejNepozitek/Edgar-Unity/tree/docusaurus/versioned_docs/version-2.0.0/examples/example-2.md",tags:[],version:"2.0.0",frontMatter:{title:"Example 2"},sidebar:"docs",previous:{title:"Example 1",permalink:"/Edgar-Unity/docs/2.0.0/examples/example-1"},next:{title:"(PRO) Platformer 1",permalink:"/Edgar-Unity/docs/2.0.0/examples/platformer-1"}},m=[{value:"Simple example",id:"simple-example",children:[{value:"Basic rooms templates",id:"basic-rooms-templates",children:[],level:3},{value:"Vertical corridors",id:"vertical-corridors",children:[],level:3},{value:"Horizontal corridors",id:"horizontal-corridors",children:[],level:3},{value:"Level graph",id:"level-graph",children:[],level:3},{value:"Results",id:"results",children:[],level:3}],level:2},{value:"Real-life example",id:"real-life-example",children:[{value:"Spawn and boss rooms",id:"spawn-and-boss-rooms",children:[],level:3},{value:"Additional room template",id:"additional-room-template",children:[],level:3},{value:"Level graph",id:"level-graph-1",children:[],level:3},{value:"Results",id:"results-1",children:[],level:3}],level:2}],d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)}},c=d("Gallery"),u=d("Image"),h=d("Path"),g=d("ExampleFeatures"),x={toc:m};function k(e){var t=e.components,r=(0,a.Z)(e,n);return(0,l.kt)("wrapper",(0,o.Z)({},x,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this tutorial, we will use ",(0,l.kt)("a",{parentName:"p",href:"https://0x72.itch.io/dungeontileset-ii"},"this tileset")," by ",(0,l.kt)("a",{parentName:"p",href:"https://0x72.itch.io/"},"0x72"),". Be sure to check out their work if you like the tileset. We will not care about room decorations - we will use just basic walls, floor and door tiles."),(0,l.kt)(c,{mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/result1.png",caption:"Simple example",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/result_reallife1.png",caption:"Real-life example",mdxType:"Image"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," I recommend reading ",(0,l.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/2.0.0/examples/example-1"},"Example 1")," first as this is a bit harder to set up, and I will not repeat the basics here.")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," All files from this example can be found at ",(0,l.kt)(h,{path:"2de:Example2",mdxType:"Path"}),".")),(0,l.kt)(g,{id:"example-2",mdxType:"ExampleFeatures"}),(0,l.kt)("h2",{id:"simple-example"},"Simple example"),(0,l.kt)("p",null,"The goal is to create two basic rectangular room templates of different sizes and a room template for both horizontal and vertical corridors."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," This tileset is trickier than the one used in ",(0,l.kt)("a",{parentName:"p",href:"/Edgar-Unity/docs/2.0.0/examples/example-1"},"Example 1")," because there is an additional row of lighter wall tiles above all horizontal wall tiles. It will cause us problems when working with corridors.")),(0,l.kt)("h3",{id:"basic-rooms-templates"},"Basic rooms templates"),(0,l.kt)("p",null,"For this example, I am using the ",(0,l.kt)("em",{parentName:"p"},"Simple door mode"),", but with the option to choose different margins for horizontal and vertical doors. The reason is that the top margin of vertical doors must be at least 3 tiles so that the doors do not interfere with the tileset."),(0,l.kt)(u,{src:"2d/examples/example2/door_mode.png",caption:"Simple door mode with custom margins.",mdxType:"Image"}),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/room_1.png",caption:"Smaller room",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/room_2.png",caption:"Bigger room",mdxType:"Image"})),(0,l.kt)("h3",{id:"vertical-corridors"},"Vertical corridors"),(0,l.kt)("p",null,"As I said before, there is a problem with corridors when working with this tileset. To be more precise, there is a problem with vertical corridors because of the additional row of tiles above wall tiles. If we were to design our vertical corridors as in Example 1, we would end up with something like this:"),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/vertical_without_override.png",caption:"Incorrent vertical corridor",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/wrong_corridor2.png",caption:"Incorrent connection",mdxType:"Image"})),(0,l.kt)("p",null,"We can solve this by using the ",(0,l.kt)("strong",{parentName:"p"},"Outline override")," feature. It allows us to tell the algorithm that instead of automatically computing the outline of the room template, we want to draw it manually. You can see the result below. By doing so, we easily fix the problem with walls being one tile taller and the level is drawn correctly."),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/vertical_without_override.png",caption:"Incorrect - Without outline override",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/vertical_with_override.png",caption:"Correct - With outline override",mdxType:"Image"})),(0,l.kt)("p",null,"To enable the ",(0,l.kt)("strong",{parentName:"p"},"Outline override"),", we have to click the ",(0,l.kt)("strong",{parentName:"p"},"Add outline override")," button. This button adds another tilemap layer called ",(0,l.kt)("em",{parentName:"p"},"Outline Override"),". "),(0,l.kt)(u,{src:"2d/examples/example2/corridor_vertical_before_gui.png",caption:"Add outline override button",mdxType:"Image"}),(0,l.kt)("p",null,"When computing the outline of this room template, the generator will now ignore all the other layers and use only the ",(0,l.kt)("em",{parentName:"p"},"Outline Override")," layer. Moreover, the generator will ignore this layer while copying individual tiles to the shared tilemap, so we can use any tiles to draw on this layer. And where we are done with drawing the outline, we can make that tilemap layer inactive, so we can see how the room template normally looks."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," We must not forget to make sure that all our doors are placed on the new outline.")),(0,l.kt)(u,{src:"2d/examples/example2/vertical_with_shown.png",caption:"We can use any tiles to draw on the Outline Override layer as they are not used in the output.",mdxType:"Image"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," In the previous version of the algorithm, we had to manually implement some additional logic to fix these situations. The goal of the current version is to make it possible without writing any code.")),(0,l.kt)("h3",{id:"horizontal-corridors"},"Horizontal corridors"),(0,l.kt)("p",null,"There is also a slight problem with horizontal corridors. It is currently not possible to have doors with length 1 to be at the corners of the room template outline. We fix this by adding ",(0,l.kt)("strong",{parentName:"p"},"Outline override")," and using a rectangular outline where the doors are not at the corners."),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/horizontal_no_override.png",caption:"Incorrect - Without outline override. There must not be doors of length 1 at the corners of the outline.",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/hor_1x2.png",caption:"Correct - With outline override. Doors are no longer at the corners of the outline.",mdxType:"Image"})),(0,l.kt)("h3",{id:"level-graph"},"Level graph"),(0,l.kt)(u,{src:"2d/examples/example2/level_graph1.png",caption:"Level graph",mdxType:"Image"}),(0,l.kt)("h3",{id:"results"},"Results"),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/result2.png",caption:"Example result",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/result3.png",caption:"Example result",mdxType:"Image"})),(0,l.kt)("h2",{id:"real-life-example"},"Real-life example"),(0,l.kt)("p",null,"To create something that is closer to a real-life example, we will add more rooms to the level graph, add special room templates for spawn and boss rooms and also two more corridor room templates."),(0,l.kt)("h3",{id:"spawn-and-boss-rooms"},"Spawn and boss rooms"),(0,l.kt)("p",null,"These rooms will contain:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"our player prefab with basic movement"),(0,l.kt)("li",{parentName:"ul"},"interactable chest that changes appearance after an interaction (no loot is implemented)"),(0,l.kt)("li",{parentName:"ul"},"ladder that causes the game manager to generate a new level after interaction"),(0,l.kt)("li",{parentName:"ul"},"an ogre in the boss room (no AI implemented)")),(0,l.kt)(u,{src:"2d/examples/example2/spawn.png",caption:"Spawn room with our player prefab, chest and exit",mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/boss.png",caption:"Boss room with our enemy prefab, chest and exit",mdxType:"Image"}),(0,l.kt)("h3",{id:"additional-room-template"},"Additional room template"),(0,l.kt)("p",null,"We can make generated dungeons more interesting by adding smaller room templates to our dead-end rooms."),(0,l.kt)(c,{cols:2,fixedHeight:!0,mdxType:"Gallery"},(0,l.kt)(u,{src:"2d/examples/example2/room_3.png",caption:"Additional room template",mdxType:"Image"})),(0,l.kt)("h3",{id:"level-graph-1"},"Level graph"),(0,l.kt)("p",null,"So the goal is to have more rooms than in the simple example and also a spawn room and a boss room. You can see one such level graph below."),(0,l.kt)(u,{src:"2d/examples/example2/level_graph2.png",caption:"Level graph",mdxType:"Image"}),(0,l.kt)("h3",{id:"results-1"},"Results"),(0,l.kt)(u,{src:"2d/examples/example2/result_reallife2.png",caption:"Example result",obsolete:!0,mdxType:"Image"}),(0,l.kt)(u,{src:"2d/examples/example2/result_reallife3.png",caption:"Example result",obsolete:!0,mdxType:"Image"}))}k.isMDXComponent=!0}}]);