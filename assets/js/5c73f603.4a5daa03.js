"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1568],{603905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},477194:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var n,o=r(487462),a=r(263366),s=(r(667294),r(603905)),i=["components"],l={title:"Level structure and rooms data"},c=void 0,u={unversionedId:"basics/generated-level-info",id:"version-2.0.5/basics/generated-level-info",title:"Level structure and rooms data",description:"Level structure",source:"@site/versioned_docs/version-2.0.5/basics/generated-level-info.md",sourceDirName:"basics",slug:"/basics/generated-level-info",permalink:"/Edgar-Unity/docs/2.0.5/basics/generated-level-info",editUrl:"https://github.com/OndrejNepozitek/Edgar-Unity/tree/docusaurus/versioned_docs/version-2.0.5/basics/generated-level-info.md",tags:[],version:"2.0.5",frontMatter:{title:"Level structure and rooms data"},sidebar:"docs",previous:{title:"Generator setup",permalink:"/Edgar-Unity/docs/2.0.5/basics/generator-setup"},next:{title:"Performance tips",permalink:"/Edgar-Unity/docs/2.0.5/basics/performance-tips"}},p=[{value:"Level structure",id:"level-structure",children:[],level:2},{value:"Rooms information",id:"rooms-information",children:[],level:2}],m=(n="Image",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),d={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"level-structure"},"Level structure"),(0,s.kt)("p",null,"In the image below, we can see the structure of a level. The game object that holds the level has two children - ",(0,s.kt)("strong",{parentName:"p"},"Tilemaps")," game object and ",(0,s.kt)("strong",{parentName:"p"},"Rooms")," game object:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Tilemaps")," game object holds all the tilemap layers."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Rooms")," game object holds instances of all room templates that are used in the level. Name of each of the children is formed as ",(0,s.kt)("strong",{parentName:"li"},'"{roomName} - {roomTemplate}"')," to make it easier to find a specific room when debugging.")),(0,s.kt)(m,{src:"2d/basics/level_structure.png",caption:"Structure of the level",mdxType:"Image"}),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Note:")," If you want to retrieve any of the game objects from a script, the best-practice is to use the ","[GeneratorConstants][GeneratorConstants#fields]"," static fields instead of using hardcoded names.")),(0,s.kt)("h2",{id:"rooms-information"},"Rooms information"),(0,s.kt)("p",null,"The generator also produces information about individual rooms in the level - their positions, which room template is used, what are neighbours of the room, etc. All this information is exposed through the ","[RoomInstance][RoomInstance#properties]"," class."),(0,s.kt)("p",null,"There are at least two ways of getting an instance of this class:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"From the game object of the room.")," All the room template instances that were described in the previous section have a ","[RoomInfo]"," component attached. This component has a reference to the corresponding ",(0,s.kt)("em",{parentName:"li"},"RoomInstance"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"From a post-processing task"),". Each ",(0,s.kt)("a",{parentName:"li",href:"/Edgar-Unity/docs/2.0.5/generators/post-process#custom-post-processing"},"custom post-processing task")," receives an instance of the ","[GeneratedLevel][GeneratedLevel#methods]"," class which has a method ",(0,s.kt)("inlineCode",{parentName:"li"},"GetRoomInstances()")," that can be used to retrieve all the room instances from the level.")))}f.isMDXComponent=!0}}]);